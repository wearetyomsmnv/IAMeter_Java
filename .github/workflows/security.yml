name: Security Checks

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

permissions:
  contents: write
  pull-requests: write  # Добавлено разрешение для создания PR
  security-events: write
  actions: read

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          token: ${{ secrets.PAT_TOKEN }}  # Персональный токен доступа
      
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: 'maven'

      - name: Build with Maven
        run: mvn clean package -B -V
        
      - name: Upload WAR
        uses: actions/upload-artifact@v3
        with:
          name: webapp
          path: target/iameter.war
          retention-days: 1

  semgrep:
    needs: build
    runs-on: ubuntu-latest
    container:
      image: returntocorp/semgrep:latest
    steps:
      - uses: actions/checkout@v3
        with:
          token: ${{ secrets.PAT_TOKEN }}  # Персональный токен доступа
      
      - name: Create reports directory
        run: mkdir -p reports
      
      - name: Semgrep Security Scan with Autofix
        run: |
          semgrep scan \
            --config "p/java" \
            --config "p/secrets" \
            --config "p/owasp-top-ten" \
            --output reports/semgrep-results.sarif \
            --sarif \
            --autofix || true
          
      - name: Create Pull Request with fixes
        uses: peter-evans/create-pull-request@v5
        with:
          token: ${{ secrets.PAT_TOKEN }}  # Персональный токен доступа
          commit-message: 'fix: auto-fixes from semgrep'
          title: 'Semgrep Auto-fixes'
          body: |
            Автоматические исправления от Semgrep security scan
            
            Этот PR содержит автоматические исправления проблем безопасности, найденных Semgrep.
            Пожалуйста, проверьте изменения перед merge.
          branch: semgrep-fixes
          base: main
          delete-branch: true
          
      - name: Upload SARIF file
        uses: github/codeql-action/upload-sarif@v2
        with:
          sarif_file: reports/semgrep-results.sarif
          
      - name: Upload Semgrep Results
        uses: actions/upload-artifact@v3
        with:
          name: semgrep-results
          path: reports/semgrep-results.sarif
          retention-days: 14

  zap_scan:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Download WAR
        uses: actions/download-artifact@v3
        with:
          name: webapp
          path: target/

      - name: Setup Tomcat
        run: |
          wget https://archive.apache.org/dist/tomcat/tomcat-9/v9.0.83/bin/apache-tomcat-9.0.83.tar.gz
          tar xzf apache-tomcat-9.0.83.tar.gz
          cp target/iameter.war apache-tomcat-9.0.83/webapps/
          chmod +x apache-tomcat-9.0.83/bin/catalina.sh
          apache-tomcat-9.0.83/bin/catalina.sh start
          echo "Waiting for Tomcat to start..."
          sleep 30
          curl -v http://localhost:8080/iameter/ || true

      - name: Prepare ZAP Environment
        run: |
          sudo mkdir -p /zap/wrk
          sudo chown -R $USER:$USER /zap
          sudo chmod -R 755 /zap

      - name: ZAP Scan
        uses: zaproxy/action-baseline@v0.9.0
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          docker_name: 'ghcr.io/zaproxy/zaproxy:stable'
          target: 'http://localhost:8080/iameter/'
          cmd_options: '-I'
          rules_file_name: '.zap/rules.tsv'
          allow_issue_writing: false
          fail_action: false

      - name: Upload Tomcat Logs
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: tomcat-logs
          path: apache-tomcat-9.0.83/logs/
          retention-days: 5

      - name: Upload ZAP Results
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: zap-results
          path: |
            zap-*
            *.html
          retention-days: 5

  dependency_check:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: 'maven'

      - name: Create reports directory
        run: mkdir -p reports

      - name: Run OWASP Dependency Check
        run: |
          mvn org.owasp:dependency-check-maven:check \
          -Dformat=HTML \
          -DoutputDirectory=reports \
          -DsuppressionFile=suppression.xml || true

      - name: Upload Dependency Check Results
        uses: actions/upload-artifact@v3
        with:
          name: dependency-check-results
          path: reports/dependency-check-report.html
          retention-days: 14

  publish_security_reports:
    needs: [semgrep, zap_scan, dependency_check]
    runs-on: ubuntu-latest
    steps:
      - name: Create reports directory
        run: mkdir -p combined-reports

      - name: Download all artifacts
        uses: actions/download-artifact@v3
        with:
          path: combined-reports

      - name: Prepare reports
        run: |
          cd combined-reports
          find . -type f -exec mv {} ./ \;
          rm -rf */

      - name: Archive Security Results
        uses: actions/upload-artifact@v3
        with:
          name: security-reports-bundle
          path: combined-reports/*
          retention-days: 14

  cleanup:
    needs: publish_security_reports
    if: always()
    runs-on: ubuntu-latest
    steps:
      - name: Remove temporary artifacts
        uses: geekyeggo/delete-artifact@v2
        with:
          name: |
            webapp
            semgrep-results
            zap-results
            dependency-check-results
            tomcat-logs

  notify:
    needs: [semgrep, zap_scan, dependency_check]
    runs-on: ubuntu-latest
    if: always()
    steps:
      - name: Send notification
        uses: nvdaes/github-action-workflow-notification@v1
        with:
          notification_title: 'Security Scan Results'
          notification_body: |
            Security scan completed for ${{github.repository}}
            
            Results summary:
            - Semgrep scan: ${{needs.semgrep.result}}
            - ZAP scan: ${{needs.zap_scan.result}}
            - Dependency check: ${{needs.dependency_check.result}}
            
            Check full results here:
            ${{github.server_url}}/${{github.repository}}/actions/runs/${{github.run_id}}
          notification_type: 'email'
