name: Security Checks

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

permissions:
  contents: read
  security-events: write
  actions: read

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: 'maven'

      - name: Build with Maven
        run: mvn clean package -B -V

      - name: Upload WAR
        uses: actions/upload-artifact@v3
        with:
          name: webapp
          path: target/iameter.war
          retention-days: 1

  security_scan:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Download WAR
        uses: actions/download-artifact@v3
        with:
          name: webapp
          path: target/

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Start Application
        run: |
          nohup java -jar target/iameter.war > app.log 2>&1 &
          echo "Waiting for app to start..."
          sleep 30
          curl -v http://localhost:8080 || true
          
      - name: Create reports directory
        run: |
          mkdir -p reports
          chmod 777 reports

      - name: ZAP Scan
        uses: zaproxy/action-baseline@v0.9.0
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          docker_name: 'ghcr.io/zaproxy/zaproxy:stable'
          target: 'http://localhost:8080'
          rules_file_name: '.zap/rules.tsv'
          cmd_options: '-I'
          allow_issue_writing: false
          artifact_name: 'zap-scan-results'

      - name: Run OWASP Dependency Check
        run: |
          mvn org.owasp:dependency-check-maven:check \
          -DformatOptions=true \
          -DoutputDirectory=reports \
          -DfailBuildOnCVSS=7

      - name: Run Semgrep
        uses: returntocorp/semgrep-action@v1
        with:
          config: >-
            p/java
            p/secrets
          output: reports/semgrep-results.sarif
          
      - name: Upload Security Results
        uses: actions/upload-artifact@v3
        with:
          name: security-reports
          path: |
            reports/*
            zap-*
            *.sarif
          retention-days: 14

  cleanup:
    needs: security_scan
    if: always()
    runs-on: ubuntu-latest
    steps:
      - name: Remove artifacts
        uses: geekyeggo/delete-artifact@v2
        with:
          name: webapp
